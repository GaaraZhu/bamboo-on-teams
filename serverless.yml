service: bamboo-on-teams-${self:custom.version}

provider:
  name: aws
  runtime: nodejs12.x
  memorySize: 512
  region: ap-southeast-2
  stage: ${opt:stage, 'local'}
  timeout: 30

  deploymentBucket:
    name: ${ssm:/bamboo-on-teams/deploymentBucket}
    serverSideEncryption: AES256

  # VPC configuration for functions to access the private Bamboo API which can be removed if Bamboo is public available.
  vpc:
    securityGroupIds:
      - ${ssm:/bamboo-on-teams/securityGroupId}
    subnetIds:
      - ${ssm:/bamboo-on-teams/subnetId}

  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - ssm:GetParameter
      Resource:
        - arn:aws:ssm:${self:provider.region}:${ssm:/bamboo-on-teams/accountId}:parameter/bamboo-on-teams/*
    - Effect: Allow
      Action:
        - states:StartExecution
      Resource: ${self:custom.aws.stepFunction.arn}

  apiGateway:
    restApiId: !Ref ApiGatewayRestApi
    restApiRootResourceId: !Ref bambooV1PathResource

  environment:
    REGION: ap-southeast-2
    BATH_PATH: bamboo/v1${self:custom.api.urls.prefix}
    BAMBOO_HOST_URL: ${ssm:/bamboo-on-teams/bambooHostUrl}
    BAMBOO_API_TOKEN: ${ssm:/bamboo-on-teams/bambooAPIToken}
    BAMBOO_PROJECT_ID:  ${ssm:/bamboo-on-teams/bambooProjectId}
    TEAMS_HMAC_SHARED_TOKEN: ${ssm:/bamboo-on-teams/teamsHMACSharedToken}
    NOTIFICATION_URL: ${ssm:/bamboo-on-terams/teamsNotificationURL}
    STATUS_CHECKER_ARN: ${self:custom.aws.stepFunction.arn}
    STEP_FUNCTIONS_ENDPOINT: https://states.ap-southeast-2.amazonaws.com
    TZ: Pacific/Auckland
    ENABLE_FOR_PROD: false

package:
  excludeDevDependencies: false
  patterns:
    - '!node_modules/**'
  individually: true

resources:
  Resources:
    ApiGatewayRestApi:
      Type: AWS::ApiGateway::RestApi
      Properties:
        Name: ${self:custom.aws.gateway.name}
        EndpointConfiguration:
          Types:
            - REGIONAL
        Policy:
          Version: "2012-10-17"
          Statement:
            - Effect: Allow
              Principal: "*"
              Action: execute-api:Invoke
              Resource:
                - execute-api:/*/*/*

    BasePathResourse:
      Type: AWS::ApiGateway::Resource
      Properties:
        RestApiId: !Ref ApiGatewayRestApi
        ParentId: !GetAtt
          - ApiGatewayRestApi
          - RootResourceId
        PathPart: bamboo

    bambooV1PathResource:
      Type: AWS::ApiGateway::Resource
      Properties:
        RestApiId: !Ref ApiGatewayRestApi
        ParentId: !Ref BasePathResourse
        PathPart: v1

functions:
  api:
    name: ${self:service}
    events:
      - http:
          private: false
          path: ${self:custom.api.urls.command}
          method: post
          cors: true
      - http:
          private: false
          path: ${self:custom.api.urls.notification}
          method: post
          cors: true
    handler: dist/functions/api/router.router
  checkStatusFunc:
    name: ${self:service}-${self:provider.stage}-statusChecker
    handler: dist/functions/api/handlers/statusChecker.checkJobStatus
  notifyStatusFunc:
    name: ${self:service}-${self:provider.stage}-statusNotifier
    handler: dist/functions/api/handlers/statusChecker.notifyJobStatus

plugins:
  - serverless-offline
  - serverless-offline-ssm
  - serverless-step-functions
  - serverless-plugin-common-excludes
  - serverless-plugin-include-dependencies

stepFunctions:
  stateMachines: ${file(resources/status-checker.yml)}

custom:
  version: v1
  aws:
    gateway:
      name: ${self:service}
    stepFunction:
      name: ${self:service}-status-puller-${self:provider.stage}
      arn: arn:aws:states:${self:provider.region}:${ssm:/bamboo-on-teams/accountId}:stateMachine:${self:custom.aws.stepFunction.name}

  serverless-offline:
    noPrependStageInUrl: true

  serverless-offline-ssm:
    stages:
      - bamboo
      - local
    ssm:
      "/bamboo-on-teams/deploymentBucket": placeholder
      "/bamboo-on-teams/accountId": placeholder
      "/bamboo-on-teams/securityGroupId": placeholder
      "/bamboo-on-teams/subnetId": placeholder
      "/bamboo-on-teams/bambooAPIToken": placeholder
      "/bamboo-on-teams/teamsHMACSharedToken": placeholder

  api:
    urls:
      prefix: /bamboo-on-teams/v1
      command: ${self:custom.api.urls.prefix}/command
      notification: ${self:custom.api.urls.prefix}/notification
